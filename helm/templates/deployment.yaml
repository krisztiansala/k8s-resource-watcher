---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "{{ .Values.appName }}"
  labels:
    app: "{{ .Values.appName }}"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "{{ .Values.appName }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.appName }}"
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccount: "sa-{{ .Values.appName }}"
      containers:
      - name: "{{ .Values.appName }}"
        image: "{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        {{- if .Values.configMap.name }}
        envFrom:
          - configMapRef:
              name: {{ .Values.configMap.name }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 20
        ports:
        - containerPort: {{ .Values.service.port }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}